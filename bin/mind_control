#!/usr/bin/env ruby
Signal.trap( :INT ) { exit }

# Add gem's lib dir to load path
$LOAD_PATH.unshift File.expand_path( "../../lib", __FILE__ )

require "slop"
require "mind_control"

# Parse options
begin
  options = Slop.parse!( help: true ) do
    banner "Usage: #{File.basename( $0 )} [socket name] [options]"
    on "d", "sockets-dir=", "Set sockets search path."
  end
rescue Slop::MissingArgumentError => e
  abort e.message
end

# Console interface
cui = MindControl::CUI.new

# Get list of running MindControlled processes
running_processes =
  MindControl::Client.get_running_processes( options[ "sockets-dir" ] || MindControl::DEFAULT_SOCKETS_DIR )

unless running_processes.any?
  cui.show_error "No running processes found!"
  exit
end

filtered_processes =
  # If filter given
  if filter = ARGV[ 0 ]
    # Filter processes by name substring and pid equality
    running_processes.select { |p| p.name.include?( filter ) || p.pid.to_i == filter.to_i }
  else
    []
  end

# If filter matches 1 process -- connect to it,
# if filter matches > 1 processes -- ask user to select process from filtered processes,
# if filter matches no processes -- ask user to select process from all running processes.
selected_process =
  case filtered_processes.size
    when 1 then filtered_processes[ 0 ]
    when 0 then cui.select_process( running_processes )
    else        cui.select_process( filtered_processes )
  end

begin
  cui.show_debug "Connecting to #{selected_process.name} via #{selected_process.socket} ..."
  MindControl::Client.connect( selected_process )
rescue Exception => e
  cui.show_error e.message
end